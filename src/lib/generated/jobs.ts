// Code generated by tygo. DO NOT EDIT.

//////////
// source: types.go

export interface TaskCreateResponse {
  id: string;
}
/**
 * @ci table=tasks
 * Jobs are background processes that can be run on a coordinator server.
 */
export interface Task {
  id: string;
  name: string;
  output?: TaskOutput;
  fields: { [key: string]: any};
  statuses: { [key: string]: any}[];
  task_for?: TaskFor;
  expiry?: any /* time.Duration */;
  state: string;
  resumable: boolean;
  created_at: string /* RFC3339 */;
}
/**
 * @ci table=tasks unfilled=1
 * A PartialTask represents a partial representation of a job.
 */
export interface PartialTask {
  id: string;
  name: string;
  expiry?: any /* time.Duration */;
  state: string;
  created_at: string /* RFC3339 */;
}
export interface TaskListResponse {
  tasks: PartialTask[];
}
/**
 * TaskFor is a struct containing the internal representation of who a task is for
 */
export interface TaskFor {
  id: string;
  target_type: string;
}
/**
 * TaskOutput is the output of a task
 */
export interface TaskOutput {
  filename: string;
  segregated: boolean; // If this flag is set, then the stored output will be stored in $taskForSimplexFormat/$Name/$taskId/$filename instead of $taskId/$filename
}
